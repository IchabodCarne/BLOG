(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{448:function(e,a,t){"use strict";t.r(a);var s=t(65),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"使用devserve"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用devserve"}},[e._v("#")]),e._v(" 使用DevServe")]),e._v(" "),t("p",[e._v("前面的几节只是让 Webpack 正常运行起来了，但在实际开发中你可能会需要：")]),e._v(" "),t("ol",[t("li",[e._v("提供 HTTP 服务而不是使用本地文件预览；")]),e._v(" "),t("li",[e._v("监听文件的变化并自动刷新网页，做到live reloading(实时重新加载)，并具有hot module replacement(热模块替换)的本地服务；")]),e._v(" "),t("li",[e._v("支持 Source Map，以方便开发环境调试。")])]),e._v(" "),t("h2",{attrs:{id:"http-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-服务"}},[e._v("#")]),e._v(" HTTP 服务")]),e._v(" "),t("p",[e._v("webpack已经提供了一套开发工具"),t("font",{staticStyle:{"font-size":"18px",color:"#4183C4"}},[e._v("DevServer")]),e._v(",\n首先安装"),t("code",[e._v("webpack-dev-server")])],1),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" i -D webpack-dev-server\n")])])]),t("p",[e._v("在package.json中配置服务启动命令")]),e._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[e._v('"dev"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"webpack-dev-server"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),t("p",[e._v("在webpack.config.js中配置服务")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("devServer")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./dist'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 将 dist 目录下的文件 serve 到 localhost:8080 下")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("hot")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 从 webpack-dev-server v4.0.0 开始，热模块替换是默认开启的")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])]),t("p",[e._v("执行"),t("code",[e._v("npm run dev")]),e._v("，我们就可以在浏览器中通过"),t("code",[e._v("http://localhost:8080/")]),e._v("访问我们搭建项目，若8080端口被占用则依次向后递增访问未被占用的端口8081、8082...")]),e._v(" "),t("h2",{attrs:{id:"实时预览"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实时预览"}},[e._v("#")]),e._v(" 实时预览")]),e._v(" "),t("p",[e._v("接着上面的步骤，你可以试试修改 index.js index.css 中的任何一个文件，保存后你会发现浏览器会被自动刷新，运行出修改后的效果。")]),e._v(" "),t("p",[e._v("Webpack 在启动时可以开启监听模式，开启监听模式后 Webpack 会监听本地文件系统的变化，发生变化时重新构建出新的结果。Webpack 默认是关闭监听模式的，你可以在启动 Webpack 时通过 webpack --watch 来开启监听模式。")]),e._v(" "),t("p",[e._v("通过 DevServer 启动的 Webpack 会开启监听模式，当发生变化时重新执行完构建后通知 DevServer。 DevServer 会让 Webpack 在构建出的 JavaScript 代码里注入一个代理客户端用于控制网页，网页和 DevServer 之间通过 WebSocket 协议通信， 以方便 DevServer 主动向客户端发送命令。 DevServer 在收到来自 Webpack 的文件变化通知时通过注入的客户端控制网页刷新。")]),e._v(" "),t("p",[e._v("如果尝试修改 index.html 文件并保存，你会发现这并不会触发以上机制，导致这个问题的原因是 Webpack 在启动时会以配置里的 entry 为入口去递归解析出 entry 所依赖的文件，只有 entry 本身和依赖的文件才会被 Webpack 添加到监听列表里。 而 index.html 文件是脱离了 JavaScript 模块化系统的，所以 Webpack 不知道它的存在。")]),e._v(" "),t("p",[e._v("webpack-dev-server 在编译之后不会写入到任何输出文件。而是将 bundle 文件保留在内存中，然后将它们 serve 到 server 中，就好像它们是挂载在 server 根路径上的真实文件一样。如果你的页面希望在其他不同路径中找到 bundle 文件，则可以通过 dev server 配置中的 devMiddleware.publicPath 选项进行修改。")]),e._v(" "),t("h2",{attrs:{id:"source-map"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#source-map"}},[e._v("#")]),e._v(" Source Map")]),e._v(" "),t("p",[e._v("在浏览器中运行的 JavaScript 代码都是编译器输出的代码，这些代码的可读性很差。如果在开发过程中遇到一个不知道原因的 Bug，则你可能需要通过断点调试去找出问题。 在编译器输出的代码上进行断点调试是一件辛苦和不优雅的事情， 调试工具可以通过 Source Map 映射代码，让你在源代码上断点调试。 Webpack 支持生成 Source Map，只需要在"),t("code",[e._v("webpack.config.js")]),e._v("中设置Source Map我们就可以开启代码调试了。")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("devtool")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"source-map"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);