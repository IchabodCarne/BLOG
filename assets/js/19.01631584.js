(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{444:function(t,s,a){"use strict";a.r(s);var e=a(65),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"输出-output"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出-output"}},[t._v("#")]),t._v(" 输出（output）")]),t._v(" "),a("p",[t._v("输出结果，在 Webpack 经过一系列处理并得出最终想要的代码后输出结果。")]),t._v(" "),a("h2",{attrs:{id:"filename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filename"}},[t._v("#")]),t._v(" filename")]),t._v(" "),a("p",[a("code",[t._v("output.filename")]),t._v(" 配置输出文件的名称，为string 类型。 如果只有一个输出文件，则可以把它写成静态不变的：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bundle.js'")]),t._v("\n")])])]),a("p",[t._v("如果不设置filename则默认生成"),a("code",[t._v("main.js")])]),t._v(" "),a("p",[t._v("Webpack提供了模板来帮助我们定义输出文件名，主要用于多入口的配置")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("变量名")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("id")]),t._v(" "),a("td",[t._v("Chunk 的唯一标识，从0开始")])]),t._v(" "),a("tr",[a("td",[t._v("name")]),t._v(" "),a("td",[t._v("Chunk 的名称")])]),t._v(" "),a("tr",[a("td",[t._v("hash")]),t._v(" "),a("td",[t._v("Chunk 的唯一标识的 Hash 值")])]),t._v(" "),a("tr",[a("td",[t._v("chunkhash")]),t._v(" "),a("td",[t._v("Chunk 内容的 Hash 值")])])])]),t._v(" "),a("p",[t._v("其中 hash 和 chunkhash 的长度是可指定的，[hash:8] 代表取8位 Hash 值，默认是20位。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[id].js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name].js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[hash].js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[chunkhash].js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[hash:10].js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[chunkhash:15].js'")]),t._v("\n")])])]),a("h2",{attrs:{id:"path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path"}},[t._v("#")]),t._v(" path")]),t._v(" "),a("p",[a("code",[t._v("output.path")]),t._v(" 配置输出文件存放在本地的目录，必须是 string 类型的绝对路径。通常通过 Node.js 的 path 模块去获取绝对路径：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// path为node的path模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// resolve：生成一个绝对路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// __dirname: 当前目录的绝对路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("path一般都设置dist为输出目录，如果不设置path，默认生成的也是dist目录")]),t._v(" "),a("h2",{attrs:{id:"publicpath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#publicpath"}},[t._v("#")]),t._v(" publicPath")]),t._v(" "),a("p",[t._v("在复杂的项目里可能会有一些构建出的资源需要异步加载，加载这些异步资源需要对应的 URL 地址。")]),t._v(" "),a("p",[a("code",[t._v("output.publicPath")]),t._v(" 配置发布到线上资源的 URL 前缀，为string 类型。 默认值是空字符串 ''，即使用相对路径。")]),t._v(" "),a("p",[t._v("当我们配置了"),a("code",[t._v("publicPath")]),t._v("，在实际应用中生产中我们代码中某个静态文件就会加上这个前缀")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("publicPath")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://cdn.example.com/assets/'")]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("https://cdn.example.com/assets/a_12345678.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);