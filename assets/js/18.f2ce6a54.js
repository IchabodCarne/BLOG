(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{442:function(t,s,a){"use strict";a.r(s);var e=a(65),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"优化-optimization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化-optimization"}},[t._v("#")]),t._v(" 优化(Optimization)")]),t._v(" "),a("p",[t._v("optimization主要用来自定义一些优化打包策略")]),t._v(" "),a("h2",{attrs:{id:"optimization-minimize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimization-minimize"}},[t._v("#")]),t._v(" optimization.minimize")]),t._v(" "),a("p",[t._v("告知 webpack 使用 TerserPlugin 或其它在 optimization.minimizer定义的插件压缩 bundle。默认值：false，不开启")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("optimization")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("minimize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"optimization-minimizer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimization-minimizer"}},[t._v("#")]),t._v(" optimization.minimizer")]),t._v(" "),a("p",[t._v("允许你通过提供一个或多个定制过的 TerserPlugin 实例，覆盖默认压缩工具(minimizer)。")]),t._v(" "),a("p",[t._v("webpack5开箱即带有最新版本的 terser-webpack-plugin。当"),a("code",[t._v("mode")]),t._v("为"),a("code",[t._v("development")]),t._v("时，webpack会自动使用TerserPlugin执行文件压缩，若希望自定义去配置压缩选项则仍需要安装"),a("code",[t._v("terser-webpack-plugin")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" terser-webpack-plugin --save-dev\n")])])]),a("p",[t._v("然后将插件添加到你的 webpack 配置文件中。例如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TerserWebpackPlugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"terser-webpack-plugin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("optimization")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("minimize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("minimizer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TerserWebpackPlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否未引入的外部库生成注释文件")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("extractComments")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用多进程并发运行以提高构建速度。 并发运行的默认数量： os.cpus().length - 1 。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parallel")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Terser 压缩配置 。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("terserOptions")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("compress")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("warnings")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("drop_console")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除console")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("drop_debugger")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除debugger")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("若有其他文件在构建过程中需要压缩，也可以在minimizer中添加相关的配置")]),t._v(" "),a("h2",{attrs:{id:"optimization-usedexports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimization-usedexports"}},[t._v("#")]),t._v(" optimization.usedExports")]),t._v(" "),a("p",[t._v("生产模式下，默认开启此选项，"),a("code",[t._v("usedExports: true")]),t._v("，对已导出但未使用的代码进行标记，该项配合"),a("code",[t._v("TerserPlugin")]),t._v("一起使用，这些已标记的代码将不会打包")]),t._v(" "),a("h3",{attrs:{id:"tree-shaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking"}},[t._v("#")]),t._v(" tree shaking")]),t._v(" "),a("p",[t._v("tree shaking 是 webpack 里的术语，用于移除 JS 上下文中未引用过的代码，以减小代码体积，间接减少代码在网络请求过程中的耗时。我把这个称为代码清洁工。需要注意的是 tree shaking 依赖于 ES6 的模块语法 —— import和export。")]),t._v(" "),a("h2",{attrs:{id:"optimization-splitchunks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#optimization-splitchunks"}},[t._v("#")]),t._v(" optimization.splitChunks")]),t._v(" "),a("p",[t._v("主要作用是提取公共代码，防止代码被重复打包，拆分过大的js文件，合并零散的js文件。")]),t._v(" "),a("h3",{attrs:{id:"splitchunks-chunks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-chunks"}},[t._v("#")]),t._v(" splitChunks.chunks")]),t._v(" "),a("p",[t._v("决定要提取那些模块。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("async")]),t._v(": 只提取异步加载的模块出来打包到一个文件中。")]),t._v(" "),a("ul",[a("li",[t._v("异步加载的模块：通过"),a("code",[t._v("import('xxx')")]),t._v("或"),a("code",[t._v("require(['xxx'],() =>{})")]),t._v("加载的模块。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("initial")]),t._v(":提取同步加载和异步加载模块，如果xxx在项目中异步加载了，也同步加载了，那么xxx这个模块会被提取两次，分别打包到不同的文件中。")]),t._v(" "),a("ul",[a("li",[t._v("同步加载的模块：通过 import xxx或require('xxx')加载的模块。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("all")]),t._v(": 不管异步加载还是同步加载的模块都提取出来，打包到一个文件中。")])])]),t._v(" "),a("h3",{attrs:{id:"splitchunks-maxsize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-maxsize"}},[t._v("#")]),t._v(" splitChunks.maxSize")]),t._v(" "),a("p",[t._v("把提取出来的模块打包生成的文件大小不能超过maxSize值，如果超过了，要对其进行分割并打包生成新的文件。单位为字节，默认为0，表示不限制大小。")]),t._v(" "),a("h3",{attrs:{id:"splitchunks-minsize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-minsize"}},[t._v("#")]),t._v(" splitChunks.minSize")]),t._v(" "),a("p",[t._v("规定被提取的模块在压缩前的大小最小值，单位为字节，默认为30000，只有超过了30000字节才会被提取。")]),t._v(" "),a("h3",{attrs:{id:"splitchunks-minchunks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-minchunks"}},[t._v("#")]),t._v(" splitChunks.minChunks")]),t._v(" "),a("p",[t._v("表示要被提取的模块最小被引用次数，引用次数超过或等于minChunks值，才能被提取。")]),t._v(" "),a("h3",{attrs:{id:"splitchunks-maxasyncrequests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-maxasyncrequests"}},[t._v("#")]),t._v(" splitChunks.maxAsyncRequests")]),t._v(" "),a("p",[t._v("最大的按需(异步)加载次数，默认为 6。")]),t._v(" "),a("h3",{attrs:{id:"splitchunks-maxinitialrequests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-maxinitialrequests"}},[t._v("#")]),t._v(" splitChunks.maxInitialRequests")]),t._v(" "),a("p",[t._v("打包后的入口文件加载时，还能同时加载js文件的数量（包括入口文件），默认为4。")]),t._v(" "),a("h3",{attrs:{id:"splitchunks-automaticnamedelimiter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-automaticnamedelimiter"}},[t._v("#")]),t._v(" splitChunks.automaticNameDelimiter")]),t._v(" "),a("p",[t._v("打包生成的js文件名的分割符，默认为~。")]),t._v(" "),a("h3",{attrs:{id:"splitchunks-cachegroups"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splitchunks-cachegroups"}},[t._v("#")]),t._v(" splitChunks.cacheGroups")]),t._v(" "),a("p",[t._v("cacheGrouops的作用就相当于是一个分组条件，满足这个条件输出为一个chunks。")]),t._v(" "),a("p",[t._v("caches的大部分配置和splitChunks相同，自己特有的几个配置如下：")]),t._v(" "),a("h4",{attrs:{id:"cachegroups-priority"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cachegroups-priority"}},[t._v("#")]),t._v(" cacheGroups.priority")]),t._v(" "),a("p",[t._v("数字越大优先级越高，因为默认值为0，所以自定义的一般是负数形式。")]),t._v(" "),a("h4",{attrs:{id:"cachegroups-reuseexistingchunk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cachegroups-reuseexistingchunk"}},[t._v("#")]),t._v(" cacheGroups.reuseExistingChunk")]),t._v(" "),a("p",[t._v("这个的作用是当前的chunk如果包含了从main里面分离出来的模块，则重用这个模块，这样的问题是会影响chunk的名称。")]),t._v(" "),a("h4",{attrs:{id:"cachegroups-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cachegroups-type"}},[t._v("#")]),t._v(" cacheGroups.type")]),t._v(" "),a("p",[t._v("针对模块的类型分类。比如设置type:json将会把json文件构建成一个chunks输出。")]),t._v(" "),a("h4",{attrs:{id:"cachegroups-test"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cachegroups-test"}},[t._v("#")]),t._v(" cacheGroups.test")]),t._v(" "),a("p",[t._v("可以是一个函数也可以是一个正则，函数的返回值是：boolean RegExp string，通过返回值或者正则来进行匹配。")]),t._v(" "),a("p",[t._v("给大家展示一个简单splitChunks的配置")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("splitChunks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同步和异步的模块都打包进一个文件中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("chunks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"all"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 切割的模块每个文件大小不超过30000字节")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("minSize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提取模块大小超过500000字节就进行切割")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("maxSize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果被引用的模块次数大于1才将该模块提取出来")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("minChunks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打包模块分组")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("cacheGroups")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把node_modules下的某块进行分组，且分组的文件名称为vendors+output.filename")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("defaultVendors")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[\\\\/]node_modules[\\\\/]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//符合组的要求就给构建venders")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("priority")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//优先级用来判断打包到哪个里面去")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vendors"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定chunks名称")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);